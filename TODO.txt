User stories
============
* Client and server can communicate by messages instead of packets

Engineering tasks
=================
* Messages with delimiter inside gets properly encoded
o PrefixedLength messages begin with an INT32 describing the message length
o Can send auto-delimited messages
o Can send and receive string messages with specific encoding
o Changing message mode retriggers new message events
	o Switching message mode affects the unread stream
o Data read from raw stream is removed from the messages-stream
o Data read as a message is removed from the raw stream
o Messages are limited by MaxMessageSize. Throws an exception if a message is read that is larger than max size
o Reading the raw stream is not limited by MaxMessageSize
o MaxMessageSize can be increased or lowered during communication and affects the unread stream
	o Fixed sized messages should support longer than 65535 byte messages (initial MaxMessageSize of Connection)
o Should support multi-byte delimiters
o Should support multiple delimiters?
o Possible bug. Don't think this happens any more:
	Start with readIndex = 0
	Write to end of queue so _writeIndex = _queue.Length. (doesn't wrap to 0 because readIndex = 0??)
	Read entire queue so _readIndex = _writeIndex (= at end of queue). 
	Write something and then read without crashing.
o Send should take an IEnumerable<byte> instead of byte[]



Known Problems
==============
o Connection.Poll() throws exception if socket closes just before checking if this.Available > 0.
